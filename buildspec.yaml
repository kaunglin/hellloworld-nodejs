version: 0.2

env:
  variables:
    TASK_DEF_NAME: rida-service-staging
    REPOSITORY_URI: $ECR_REGISTRY_URL/rida-backend
    AWS_REGION: ap-southeast-1

phases:
  install:
    runtime-versions:
      nodejs: 12
    commands:
      - npm config -g set prefer-offline true
      - npm config -g set cache /root/.npm
      - |
        echo Installing source NPM dependencies...
        npm ci
      
      - |
        echo tests
        npm test
      
      - |
        echo upload to codecov
        curl -s https://codecov.io/bash | bash -s -- -t 8c2af498-3d23-453a-8521-3ad58d0817b0

  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $ECR_REGISTRY_URL
      - IMAGE_TAG=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...
      - docker build -t $REPOSITORY_URI:$IMAGE_TAG .
      - echo Tagging the image as latest...
      - docker tag $REPOSITORY_URI:$IMAGE_TAG $REPOSITORY_URI:latest
      - echo Build completed on `date`
      - echo Pushing the Docker image...
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - docker push $REPOSITORY_URI:latest
  post_build:
    commands:
      - echo Updating task definition...
      - aws ecs describe-task-definition --task-definition $TASK_DEF_NAME --region $AWS_REGION | jq .taskDefinition > taskdef.json
      - TASK_DEFINITION_ARN=$(aws ecs describe-task-definition --task-definition $TASK_DEF_NAME --region $AWS_REGION | jq -r '.taskDefinition.taskDefinitionArn')
      - |
        sed -ri "s|<TASK_DEFINITION>|$TASK_DEFINITION_ARN|" appspec.yaml
        sed -ri "s|<CONTAINER_NAME>|$TASK_DEF_NAME|" appspec.yaml
artifacts:
  files:
    - appspec.yaml
    - taskdef.json
    - coverage/**/*
  base-directory: coverage

cache:
  paths:
    - './node_modules/**/*'
    - '/root/.npm-cache/**/*'